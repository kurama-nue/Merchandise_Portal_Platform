version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: merch-portal-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: merch_portal
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: merch-portal-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    container_name: merch-portal-api
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password@postgres:5432/merch_portal?schema=public
      MONGODB_URI: mongodb://mongodb:27017/merch_portal
      RAZORPAY_KEY_ID: rzp_test_your_key_id
      RAZORPAY_KEY_SECRET: your_key_secret
      RAZORPAY_WEBHOOK_SECRET: your_webhook_secret
    ports:
      - "3001:3001"
    volumes:
      - ./apps/api:/app/apps/api
      - /app/apps/api/node_modules
    command: npm run dev

  # Web Service
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    container_name: merch-portal-web
    depends_on:
      - api
    environment:
      - VITE_API_URL=http://localhost:3001/api
      - API_URL=http://api:3001
    ports:
      - "3000:80"
    volumes:
      - ./apps/web:/app/apps/web
      - /app/apps/web/node_modules

volumes:
  postgres_data:
  mongodb_data: